{
  "title": "",
  "type": "object",
  "required": ["mode", "type"],
  "properties": {
    "mode": {
      "title": "Operation Mode",
      "type": "string",
      "description": "Extract creates new fields. Reserialize will extract, filter fields and then reserialize.",
      "enum": ["extract", "reserialize"],
      "enumNames": ["Extract", "Reserialize"],
      "default": "extract"
    },
    "type":{
      "title": "Type",
      "description": "Parser/Formatter type to use.",
      "type": "string",
      "enum": ["csv", "elff", "clf", "kvp", "json", "delim"],
      "enumNames": ["CSV", "Extended Log File Format", "Common Log Format", "Key=Value Pairs", "JSON Object", "Delimited values"],
      "default": "csv"
    },
    "delimChar": {},
    "quoteChar": {},
    "escapeChar": {},
    "nullValue": {},
    "srcField": {
      "title": "Source Field",
      "description": "Field which contains text to be parsed",
      "type": "string",
      "default": "_raw"
    },
    "dstField": {
      "title": "Destination Field",
      "description": "Field name where to add fields to. Extract Mode only.",
      "type": "string"
    },
    "cleanFields": {},
    "fields": {
      "title": "List of Fields",
      "description": "Fields expected to be extracted, in order. If not specified parser will auto-generate.",
      "type": "array",
      "items": {"type": "string"}
    },
    "keep": {
      "title": "Fields To Keep",
      "description": "List of fields to keep, supports wildcards (*). Takes precedence over 'Fields to Remove'.",
      "type": "array",
      "items": {"type": "string"}
    },
    "remove": {
      "title": "Fields To Remove",
      "description": "List of fields to remove, supports wildcards (*). Cannot remove fields matching 'Fields to Keep'.",
      "type": "array",
      "items": {"type": "string"}
    },
    "fieldFilterExpr": {
      "title": "Fields Filter Expression",
      "description": "Expression evaluated against {index, name, value} context. Return truthy to keep field, falsy to remove.",
      "type": "string",
      "jsExpression": true,
      "fieldFilterExpr": true
    }
  },
  "dependencies": {
    "type": {
      "oneOf": [
        {
          "properties": {
            "type": {
              "enum":["kvp"]
            },
            "cleanFields": {
              "type": "boolean",
              "default": false,
              "title": "Clean Fields",
              "description": "Whether to clean field names by replacing non [a-zA-Z0-9] characters with _"
            },
            "allowedKeyChars": {
              "type": "array",
              "items": {"type": "string"},
              "default": [],
              "title": "Allowed key characters",
              "description": "A list of characters that may be present in a key name, even though they are normally separator or control characters"
            },
            "allowedValueChars": {
              "type": "array",
              "items": {"type": "string"},
              "default": [],
              "title": "Allowed value characters",
              "description": "A list of characters that may be present in a value name, even though they are normally separator or control characters"
            }
          }
        },
        {
          "properties": {
            "type": {
              "enum":["delim"]
            },
            "delimChar": {
              "type": "string",
              "default": ",",
              "title": "Delimiter",
              "minLength": 1,
              "description": "Delimiter character to use to split values"
            },
            "quoteChar": {
              "type": "string",
              "default": "\"",
              "title": "Quote Char",
              "minLength": 1,
              "description": "Character used to quote literal values"
            },
            "escapeChar": {
              "type": "string",
              "default": "\\",
              "title": "Escape Char",
              "minLength": 1,
              "description": "Escape character used to escape delimiter or quote character"
            },
            "nullValue": {
              "type": "string",
              "default": "-",
              "title": "Null Value",
              "description": "Field value representing the null value. Null fields will be omitted."
            }
          }
        },
        {
          "properties": {
            "type": {
              "enum":["csv", "elff", "clf", "json"]
            }
          }
        }
      ]
    }
  }
  
}
